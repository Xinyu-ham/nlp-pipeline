name: Deploy to AWS ECR
on:
  push:
    branches:
      - main

# Wait for any in-progress job to finish
concurrency: merge-${{ github.ref }}

env:
  APP_NAME: "mlflow"
  DOCKERFILE: "Dockerfile.mlflow"

jobs:
  prepare_env:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set_env.outputs.env_name }}
    steps:
      - name: Prepare environment
        id: prepare_env
        run: |
          echo "env is ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/staging" ]; then
            echo "env_name=staging" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/demo" ]; then
            echo "env_name=demo" >> $GITHUB_OUTPUT
          else
            echo "env_name=dev" >> $GITHUB_OUTPUT
          fi

  build_push_ecr_image:
    runs-on: ubuntu-latest
    needs: prepare_env
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: "ap-southeast-1"
      - name: Login to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and push ECR
        id: ecr_build_push
        env:
          ENV_NAME: ${{ needs.prepare_env.outputs.env_name }}
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          APP_NAME: ${{ env.APP_NAME }}
          DOCKERFILE: ${{ env.DOCKERFILE }}
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag $ECR_REGISTRY/$APP_NAME:$ENV_NAME \
            --push \
            --file $DOCKERFILE .